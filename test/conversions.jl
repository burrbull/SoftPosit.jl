Posit8_lookup = Float32[0.0,
5.9604645e-8,
9.536743e-7,
3.8146973e-6,
1.5258789e-5,
3.0517578e-5,
6.1035156e-5,
0.00012207031,
0.00024414062,
0.00036621094,
0.00048828125,
0.0007324219,
0.0009765625,
0.0014648438,
0.001953125,
0.0029296875,
0.00390625,
0.0048828125,
0.005859375,
0.0068359375,
0.0078125,
0.009765625,
0.01171875,
0.013671875,
0.015625,
0.01953125,
0.0234375,
0.02734375,
0.03125,
0.0390625,
0.046875,
0.0546875,
0.0625,
0.0703125,
0.078125,
0.0859375,
0.09375,
0.1015625,
0.109375,
0.1171875,
0.125,
0.140625,
0.15625,
0.171875,
0.1875,
0.203125,
0.21875,
0.234375,
0.25,
0.28125,
0.3125,
0.34375,
0.375,
0.40625,
0.4375,
0.46875,
0.5,
0.5625,
0.625,
0.6875,
0.75,
0.8125,
0.875,
0.9375,
1.0,
1.125,
1.25,
1.375,
1.5,
1.625,
1.75,
1.875,
2.0,
2.25,
2.5,
2.75,
3.0,
3.25,
3.5,
3.75,
4.0,
4.5,
5.0,
5.5,
6.0,
6.5,
7.0,
7.5,
8.0,
9.0,
10.0,
11.0,
12.0,
13.0,
14.0,
15.0,
16.0,
20.0,
24.0,
28.0,
32.0,
40.0,
48.0,
56.0,
64.0,
80.0,
96.0,
112.0,
128.0,
160.0,
192.0,
224.0,
256.0,
384.0,
512.0,
768.0,
1024.0,
1536.0,
2048.0,
3072.0,
4096.0,
8192.0,
16384.0,
32768.0,
65536.0,
262144.0,
1.048576e6,
1.6777216e7,
NaN,
-1.6777216e7,
-1.048576e6,
-262144.0,
-65536.0,
-32768.0,
-16384.0,
-8192.0,
-4096.0,
-3072.0,
-2048.0,
-1536.0,
-1024.0,
-768.0,
-512.0,
-384.0,
-256.0,
-224.0,
-192.0,
-160.0,
-128.0,
-112.0,
-96.0,
-80.0,
-64.0,
-56.0,
-48.0,
-40.0,
-32.0,
-28.0,
-24.0,
-20.0,
-16.0,
-15.0,
-14.0,
-13.0,
-12.0,
-11.0,
-10.0,
-9.0,
-8.0,
-7.5,
-7.0,
-6.5,
-6.0,
-5.5,
-5.0,
-4.5,
-4.0,
-3.75,
-3.5,
-3.25,
-3.0,
-2.75,
-2.5,
-2.25,
-2.0,
-1.875,
-1.75,
-1.625,
-1.5,
-1.375,
-1.25,
-1.125,
-1.0,
-0.9375,
-0.875,
-0.8125,
-0.75,
-0.6875,
-0.625,
-0.5625,
-0.5,
-0.46875,
-0.4375,
-0.40625,
-0.375,
-0.34375,
-0.3125,
-0.28125,
-0.25,
-0.234375,
-0.21875,
-0.203125,
-0.1875,
-0.171875,
-0.15625,
-0.140625,
-0.125,
-0.1171875,
-0.109375,
-0.1015625,
-0.09375,
-0.0859375,
-0.078125,
-0.0703125,
-0.0625,
-0.0546875,
-0.046875,
-0.0390625,
-0.03125,
-0.02734375,
-0.0234375,
-0.01953125,
-0.015625,
-0.013671875,
-0.01171875,
-0.009765625,
-0.0078125,
-0.0068359375,
-0.005859375,
-0.0048828125,
-0.00390625,
-0.0029296875,
-0.001953125,
-0.0014648438,
-0.0009765625,
-0.0007324219,
-0.00048828125,
-0.00036621094,
-0.00024414062,
-0.00012207031,
-6.1035156e-5,
-3.0517578e-5,
-1.5258789e-5,
-3.8146973e-6,
-9.536743e-7,
-5.9604645e-8]

@testset "Float32(Posit8)" begin
    # all positive posits
    for i in 0x00:0x7f
        @test Posit8_lookup[i+1] == Float32(Posit8(i))
    end

    # special case for NaN due to == testing
    @test isnan(Float32(Posit8(0x80)))

    # all negative posits
    for i in 0x81:0xff
        @test Posit8_lookup[i+1] == Float32(Posit8(i))
    end
end

Posit16_lookup = Float32[0,
1.3877787807814457e-17,
2.220446049250313e-16,
8.881784197001252e-16,
3.552713678800501e-15,
7.105427357601002e-15,
1.4210854715202004e-14,
2.842170943040401e-14,
5.684341886080802e-14,
8.526512829121202e-14,
1.1368683772161603e-13,
1.7053025658242404e-13,
2.2737367544323206e-13,
3.410605131648481e-13,
4.547473508864641e-13,
6.821210263296962e-13,
9.094947017729282e-13,
1.1368683772161603e-12,
1.3642420526593924e-12,
1.5916157281026244e-12,
1.8189894035458565e-12,
2.2737367544323206e-12,
2.7284841053187847e-12,
3.183231456205249e-12,
3.637978807091713e-12,
4.547473508864641e-12,
5.4569682106375694e-12,
6.366462912410498e-12,
7.275957614183426e-12,
9.094947017729282e-12,
1.0913936421275139e-11,
1.2732925824820995e-11,
1.4551915228366852e-11,
1.6370904631912708e-11,
1.8189894035458565e-11,
2.000888343900442e-11,
2.1827872842550278e-11,
2.3646862246096134e-11,
2.546585164964199e-11,
2.7284841053187847e-11,
2.9103830456733704e-11,
3.2741809263825417e-11,
3.637978807091713e-11,
4.001776687800884e-11,
4.3655745685100555e-11,
4.729372449219227e-11,
5.093170329928398e-11,
5.4569682106375694e-11,
5.820766091346741e-11,
6.548361852765083e-11,
7.275957614183426e-11,
8.003553375601768e-11,
8.731149137020111e-11,
9.458744898438454e-11,
1.0186340659856796e-10,
1.0913936421275139e-10,
1.1641532182693481e-10,
1.3096723705530167e-10,
1.4551915228366852e-10,
1.6007106751203537e-10,
1.7462298274040222e-10,
1.8917489796876907e-10,
2.0372681319713593e-10,
2.1827872842550278e-10,
2.3283064365386963e-10]

@testset "Float32(Posit16)" begin

    @test iszero(Float32(Posit16(0x0000)))

    # test the first 64 non-zero values and their negation
    for i in 0x0001:0x0040  
        @test Posit16_lookup[i+1] == Float32(Posit16(i))

        j = 0xffff-i+0x1
        @test Posit16_lookup[i+1] == -Float32(Posit16(j))
    end

    # test the first 8 values (mantissa=0) also on their inverse and negation
    for i in 0x0001:0x0008
        j = 0x8000-i  
        @test Posit16_lookup[i+1] == 1/Float32(Posit16(j))

        j = 0x8000+i  
        @test Posit16_lookup[i+1] == -1/Float32(Posit16(j))
    end

    @test isnan(Float32(Posit16(0x8000)))
end

Posit161_lookup = Float32[0,
3.725290298461914e-9,
1.4901161193847656e-8,
2.9802322387695312e-8,
5.960464477539063e-8,
8.940696716308594e-8,
1.1920928955078125e-7,
1.7881393432617188e-7,
2.384185791015625e-7,
2.980232238769531e-7,
3.5762786865234375e-7,
4.172325134277344e-7,
4.76837158203125e-7,
5.960464477539062e-7,
7.152557373046875e-7,
8.344650268554688e-7,
9.5367431640625e-7,
0.0000010728836059570312,
0.0000011920928955078125,
0.0000013113021850585938,
0.000001430511474609375,
0.0000015497207641601562,
0.0000016689300537109375,
0.0000017881393432617188,
0.0000019073486328125,
0.0000021457672119140625,
0.000002384185791015625,
0.0000026226043701171875,
0.00000286102294921875,
0.0000030994415283203125,
0.000003337860107421875,
0.0000035762786865234375,
0.000003814697265625,
0.0000040531158447265625,
0.000004291534423828125,
0.0000045299530029296875,
0.00000476837158203125,
0.0000050067901611328125,
0.000005245208740234375,
0.0000054836273193359375,
0.0000057220458984375,
0.0000059604644775390625,
0.000006198883056640625,
0.0000064373016357421875,
0.00000667572021484375,
0.0000069141387939453125,
0.000007152557373046875,
0.0000073909759521484375,
0.00000762939453125,
0.000008106231689453125,
0.00000858306884765625,
0.000009059906005859375,
0.0000095367431640625,
0.000010013580322265625,
0.00001049041748046875,
0.000010967254638671875,
0.000011444091796875,
0.000011920928955078125,
0.00001239776611328125,
0.000012874603271484375,
0.0000133514404296875,
0.000013828277587890625,
0.00001430511474609375,
0.000014781951904296875,
0.0000152587890625]

@testset "Float32(Posit16_1)" begin

    @test iszero(Float32(Posit16_1(0x0000)))

    # test the first 64 non-zero values and their negation
    for i in 0x0001:0x0040  
        @test Posit161_lookup[i+1] == Float32(Posit16_1(i))

        j = 0xffff-i+0x1
        @test Posit161_lookup[i+1] == -Float32(Posit16_1(j))
    end

    # test the first 4 values (mantissa=0) also on their inverse and negation
    for i in 0x0001:0x0004
        j = 0x8000-i  
        @test Posit161_lookup[i+1] == 1/Float32(Posit16_1(j))

        j = 0x8000+i  
        @test Posit161_lookup[i+1] == -1/Float32(Posit16_1(j))
    end

    @test isnan(Float32(Posit16_1(0x8000)))
end